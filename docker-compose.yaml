version: '3.7'

services: 

  web:
    build: 
      context: ./projects/store-app
      dockerfile: Dockerfile

    env_file: 
      - ".env.web.dev"

    ports: 
      - "8000:80"

    volumes: 
      - "./projects/store-app:/home/app/src"

    depends_on: 
      - redis
      - payment_service
      # - store_app_postgres

    restart: always


  payment_service:
    
    build: 
      context: ./projects/payment-service
      dockerfile: Dockerfile

    env_file: 
      - ".env.payment.dev"

    ports: 
      - "9000:80"

    volumes: 
      - "/home/qz/projects/django-online-store/auction-project/auction_payment_service:/home/app/src"

    depends_on:
      - redis
      # - payment_postgres
    restart: always

  redis:
    image: bitnami/redis:latest

    environment:
      - REDIS_PORT=6379
      - REDIS_PASSWORD=VBvc6yBGT0T2GAwn64aZLkh4ioNS8Z8v
      - REDIS_MASTER_PASSWORD=VBvc6yBGT0T2GAwn64aZLkh4ioNS8Z8v

    ports:
      - 6379

  # zookeeper:
  #   image: 'bitnami/zookeeper:latest'
  #   ports:
  #     - '2181:2181'
  #   environment:
  #     - ALLOW_ANONYMOUS_LOGIN=yes
  # kafka:
  #   image: 'bitnami/kafka:latest'
  #   ports:
  #     - '9092:9092'
  #   environment:
  #     - KAFKA_BROKER_ID=1
  #     - KAFKA_LISTENERS=PLAINTEXT://:9092
  #     - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
  #     - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
  #     - ALLOW_PLAINTEXT_LISTENER=yes
  #   depends_on:
  #     - zookeeper

  store_app_postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: test1234$$
    ports:
      - 5432


  payment_postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: test1234$$
    ports:
      - 5432
